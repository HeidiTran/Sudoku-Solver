{"version":3,"sources":["component/NavMenu.js","component/Square.js","functions/solve.js","functions/valid.js","component/Board.js","component/Footer.js","component/Home.js","component/About.js","router/router.js","App.js","serviceWorker.js","index.js"],"names":["NavMenuComponent","Navbar","bg","expand","Brand","href","src","alt","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","React","Component","SquareComponent","Button","variant","this","props","disabled","onClick","value","solveSudokuSucceed","board","cells","cols","rows","groupSize","BOARD_SIZE","i","j","cellValue","group","Math","floor","isValidSudoku","backTrack","validPositionIndex","curBoard","validPositions","isFinal","position","nextSteps","curRow","row","curCol","col","steps","Set","filter","x","indexOf","has","delete","topLeftR","topLeftC","Array","from","getNextSteps","r","c","forEach","step","positions","push","Position","getValidPositions","BoardComponent","state","squares","fill","map","selectedCell","showNumPad","showToast","toastBody","solved","resetBoard","bind","solveAndUpdateBoard","numPad","hideModal","showToastSuccess","showToastFail","hideToast","setState","buildRow","rowNumber","renderSquare","key","toString","handleClick","slice","Modal","show","onHide","centered","Body","Card","selectCellValue","startTime","performance","now","endTime","toFixed","time","body","style","Container","buildBoard","Toast","onClose","delay","autohide","Row","FooterComponent","fixed","Text","target","icon","faGithubAlt","size","color","HomeComponent","AboutComponent","AppRouter","fluid","path","component","to","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iUAGaA,EAAb,uKAEI,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,mHACJC,IAAI,cACJC,OAAO,OACPC,UAAU,SAEZ,kDAEF,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKL,UAAU,WACf,kBAACK,EAAA,EAAIC,KAAL,CAAUV,KAAK,uBAAf,QACA,kBAACS,EAAA,EAAIC,KAAL,CAAUV,KAAK,wBAAf,gBAjBV,GAAsCW,IAAMC,W,gBCA/BC,EAAb,uKAEI,OACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,oBACRP,GAAIQ,KAAKC,MAAMT,GACfU,SAAUF,KAAKC,MAAMC,SACrBC,QAASH,KAAKC,MAAME,QACpBf,UAAU,UAETY,KAAKC,MAAMG,WAVpB,GAAqCT,IAAMC,W,wCCIpC,SAASS,EAAmBC,GACjC,QCFK,SAAuBA,GAM1B,IALA,IAAMC,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,EAAYC,EAAa,EAEtBC,EAAI,EAAGA,EAAID,EAAYC,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,IAAMC,EAAYR,EAAMM,GAAGC,GAE3B,GAAkB,OAAdC,EAAoB,CACpB,IAAMC,EAAQC,KAAKC,MAAMJ,EAAIH,GAAcM,KAAKC,MAAML,EAAIF,GAAaA,EAEvE,GAAIH,EAAMQ,GAAOD,IAAcN,EAAKK,GAAGC,IAAcL,EAAKG,GAAGE,GACzD,OAAO,EAGXP,EAAMQ,GAAOD,GAAaN,EAAKK,GAAGC,GAAaL,EAAKG,GAAGE,IAAa,GAKhF,OAAO,EDpBJI,CAAcZ,KAarB,SAASa,EAAUC,EAAoBC,EAAUC,GAC/C,GAAIC,EAAQF,GACV,OAEF,IAAIG,EAAWF,EAAeF,GAC1BK,EA+CN,SAAsBD,EAAUH,GAC9B,IAAIK,EAASF,EAASG,IAClBC,EAASJ,EAASK,IAGlBC,EAAQ,IAAIC,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7CD,EAAQ,IAAIC,IAAI,YAAID,GAAOE,QAAO,SAASC,GAAK,OAAOZ,EAASK,GAAQQ,QAAQD,GAAK,MAErF,IAAK,IAAIN,EAAM,EAAGA,EAAMhB,EAAYgB,IAAO,CACzC,IAAIb,EAAYO,EAASM,GAAKC,GACZ,OAAdd,GAAsBgB,EAAMK,IAAIrB,IAClCgB,EAAMM,OAAOtB,GAOjB,IAHA,IAAMJ,EAAYC,EAAa,EAC3B0B,EAAWrB,KAAKC,MAAMS,EAAShB,GAAaA,EAC5C4B,EAAWtB,KAAKC,MAAMW,EAASlB,GAAaA,EACvCE,EAAIyB,EAAUzB,EAAIyB,EAAW3B,EAAWE,IAC/C,IAAK,IAAIC,EAAIyB,EAAUzB,EAAIyB,EAAW5B,EAAWG,IAE7B,QADlBC,EAAYO,EAAST,GAAGC,KACEiB,EAAMK,IAAIrB,IAClCgB,EAAMM,OAAOtB,GAInB,OAAOyB,MAAMC,KAAKV,GAzEFW,CAAajB,EAAUH,GAEnCqB,EAAIlB,EAASG,IACbgB,EAAInB,EAASK,IACjBJ,EAAUmB,SAAQ,SAAAC,GACXtB,EAAQF,KACXA,EAASqB,GAAGC,GAAKE,GACnB1B,EAAUC,EAAqB,EAAGC,EAAUC,GACvCC,EAAQF,KACXA,EAASqB,GAAGC,GAAK,SAvBrBxB,CAAU,EAAGb,EA+Bf,SAA2BA,GAEzB,IADA,IAAIwC,EAAY,GACPlC,EAAI,EAAGA,EAAID,EAAYC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IACV,OAAhBP,EAAMM,GAAGC,IACXiC,EAAUC,KAAK,IAAIC,EAASpC,EAAGC,IAIrC,OAAOiC,EAzCcG,CAAkB3C,KAEhC,GA8CT,SAASiB,EAAQF,GACf,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAYC,IAC9B,IAAmC,IAA/BS,EAAST,GAAGsB,QAAQ,MACtB,OAAO,EAGX,OAAO,E,IAqCHc,EACJ,WAAYrB,EAAKE,GAAM,oBACrB7B,KAAK2B,IAAMA,EACX3B,KAAK6B,IAAMA,GEpGFlB,EAAa,EAEbuC,EAAb,kDACE,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDkD,MAAQ,CACXC,QAASb,MAAM5B,GAAY0C,KAAK,MAAMC,KAAI,kBAAMf,MAAM5B,GAAY0C,KAAK,SACvEE,aAAc,GACdC,YAAY,EACZC,WAAW,EACXC,UAAW,GACXC,QAAQ,GAGV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBACjB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,UAAY,EAAKA,UAAUN,KAAf,gBAjBA,EADrB,wDAqBcnB,EAAGC,GACb3C,KAAKoE,SAAS,CAACZ,YAAY,EAAMD,aAAc,CAACb,EAAGC,OAtBvD,mCAyBgB,IAAD,OAGX,MAFa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnBW,KAAI,SAAC3B,GAAD,OAAS,EAAK0C,SAAS1C,QA3BlD,+BA+BW2C,GAAY,IAAD,OAEZ3C,EADO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrB2B,KAAI,SAACzB,GAAD,OACnB,EAAK0C,aAAaD,EAAWzC,MAG/B,OACE,yBACE2C,IAAK,OAASF,EAAUG,WACxBrF,UAAU,aAETuC,KA1CT,mCAgDI,IAAMrB,EAAQiC,MAAM5B,GAAY0C,KAAK,MAAMC,KAAI,kBAAMf,MAAM5B,GAAY0C,KAAK,SAC5ErD,KAAKoE,SAAS,CAAChB,QAAS9C,EAAOqD,QAAQ,MAjD3C,mCAoDejB,EAAGC,GAAI,IAAD,OACjB,OACE,kBAAC,EAAD,CACEnD,GAAI,UAAYkD,EAAE+B,WAAa,IAAM9B,EAAE8B,WACvCD,IAAK,UAAY9B,EAAE+B,WAAa,IAAM9B,EAAE8B,WACxCvE,SAAUF,KAAKmD,MAAMQ,OACrBvD,MAAOJ,KAAKmD,MAAMC,QAAQV,GAAGC,GAC7BxC,QAAS,kBAAM,EAAKuE,YAAYhC,EAAGC,QA3D3C,sCAgEkBvC,GACd,IAAIgD,EAAUpD,KAAKmD,MAAMC,QAAQuB,QAC3BpB,EAAevD,KAAKmD,MAAMI,aAAaoB,QAC7CvB,EAAQG,EAAa,IAAIA,EAAa,IAAMnD,EAC5CJ,KAAKoE,SAAS,CAAChB,QAASA,EAASI,YAAY,MApEjD,kCAwEIxD,KAAKoE,SAAS,CAACZ,YAAY,MAxE/B,+BA2EY,IAAD,OACP,OACE,kBAACoB,EAAA,EAAD,CAAOC,KAAM7E,KAAKmD,MAAMK,WAAYsB,OAAQ9E,KAAKgE,UAAWe,UAAQ,GAClE,kBAACH,EAAA,EAAMI,KAAP,KACE,yBAAK5F,UAAU,aACb,kBAAC6F,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,OAGJ,yBAAK9F,UAAU,aACb,kBAAC6F,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,OAGJ,yBAAK9F,UAAU,aACb,kBAAC6F,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,MAEF,kBAACD,EAAA,EAAD,KACE,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,kBAAkBI,QAAS,kBAAM,EAAK+E,gBAAgB,KAAtE,OAGJ,yBAAK9F,UAAU,kBACX,kBAACU,EAAA,EAAD,CAAQC,QAAQ,iBAAiBI,QAAS,kBAAM,EAAK+E,gBAAgB,QAArE,cAjHd,4CAyHI,IAAM5E,EAAQN,KAAKmD,MAAMC,QAAQuB,QAC3BQ,EAAYC,YAAYC,MAC9B,GAAIhF,EAAmBC,GAAQ,CAC7B,IAAMgF,EAAUF,YAAYC,MAC5BrF,KAAKoE,SAAS,CAAChB,QAAS9C,EAAOqD,QAAQ,IACvC3D,KAAKiE,kBAAkBqB,EAAUH,GAAWI,QAAQ,SAEpDvF,KAAKkE,kBAhIX,uCAoImBsB,GACf,IAAMC,EACJ,6BACE,4BAAQC,MAAO,CAAC,MAAS,UAAzB,aADF,WAEWF,EAFX,uCAMFxF,KAAKoE,SAAS,CAACX,WAAW,EAAMC,UAAW+B,MA5I/C,sCAgJI,IAAMA,EACJ,6BACE,4BAAQC,MAAO,CAAC,MAAS,QAAzB,WADF,2CAMF1F,KAAKoE,SAAS,CAACX,WAAW,EAAMC,UAAW+B,MAvJ/C,kCA2JIzF,KAAKoE,SAAS,CAAC,WAAa,MA3JhC,+BA+JI,OACE,6BACE,kBAACuB,EAAA,EAAD,KACG3F,KAAK4F,aACN,uBAAM7B,OAAN,OAEF,yBAAK2B,MAAO,CAAC,QAAW,SACtB,kBAACG,EAAA,EAAD,CACEH,MAAO,CAAC,SAAY,WAAY,OAAU,OAAQ,MAAS,KAC3DtG,UAAU,OACV0G,QAAS9F,KAAKmE,UACdU,KAAM7E,KAAKmD,MAAMM,UACjBsC,MAAO,IACPC,UAAQ,GAER,kBAACH,EAAA,EAAMb,KAAP,KACGhF,KAAKmD,MAAMO,aAIlB,kBAACuC,EAAA,EAAD,CAAK7G,UAAU,wBACb,kBAACU,EAAA,EAAD,CAAQC,QAAQ,SAASX,UAAU,OAAOe,QAASH,KAAK4D,YAAxD,SAGA,kBAAC9D,EAAA,EAAD,CAAQC,QAAQ,UAAUG,SAAUF,KAAKmD,MAAMQ,OAAQxD,QAASH,KAAK8D,qBAArE,gBAvLV,GAAoCnE,IAAMC,W,gBCF7BsG,EAAb,uKAEI,OACE,kBAACtH,EAAA,EAAD,CAAQE,OAAO,KAAKiB,QAAQ,QAAQlB,GAAG,QAAQsH,MAAM,UACnD,kBAACvH,EAAA,EAAOW,SAAR,CAAiBH,UAAU,0BACzB,kBAACR,EAAA,EAAOwH,KAAR,sDAGA,kBAAC3G,EAAA,EAAIC,KAAL,CAAUV,KAAK,6CAA6CqH,OAAO,UACjE,kBAAC,IAAD,CAAiBC,KAAMC,IAAaC,KAAK,KAAKC,MAAM,gBAThE,GAAqC9G,IAAMC,WCA9B8G,EAAb,uKAEI,OACE,6BACE,wBAAItH,UAAU,oBAAd,4CACA,kBAACuG,EAAA,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,WARR,GAAmChG,IAAMC,WCF5B+G,EAAb,uKAEI,OACE,6BACE,sDACA,kBAAC,EAAD,WALR,GAAoChH,IAAMC,WCI7BgH,EAAY,kBACvB,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAACjB,EAAA,EAAD,CAAWkB,OAAK,EAACzH,UAAU,QACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0H,KAAK,sBAAsBC,UAAYL,IAC9C,kBAAC,IAAD,CAAOI,KAAK,uBAAuBC,UAAYJ,IAC/C,kBAAC,IAAD,CAAUnE,KAAK,iBAAiBwE,GAAG,4BCJ5BC,MANf,WACE,OACE,kBAAC,EAAD,OCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a56e26e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport class NavMenuComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/home\">\r\n          <img \r\n            src=\"https://cdn2.iconfinder.com/data/icons/sports-and-games-doodles-vol-02/32/sudoku-puzzle-game-math-riddle-512.png\" \r\n            alt=\"sudoku icon\" \r\n            height=\"30px\" \r\n            className=\"mr-3\" \r\n          />\r\n          <strong>SUDOKU SOLVER</strong>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/Sudoku-Solver/home\">Home</Nav.Link>\r\n          <Nav.Link href=\"/Sudoku-Solver/about\">About</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport class SquareComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        variant='outline-secondary' \r\n        id={this.props.id} \r\n        disabled={this.props.disabled}\r\n        onClick={this.props.onClick}\r\n        className=\"square\"\r\n      >\r\n        {this.props.value}\r\n      </Button>\r\n    );\r\n  }\r\n}","import { BOARD_SIZE } from '../component/Board';\r\nimport { isValidSudoku } from './valid';\r\n\r\n/**\r\n * @param {number[][]} board \r\n * @returns {boolean}\r\n */\r\nexport function solveSudokuSucceed(board) {\r\n  if (!isValidSudoku(board))\r\n    return false\r\n\r\n  let validPositions = getValidPositions(board);\r\n  backTrack(0, board, validPositions);\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {number} validPositionIndex \r\n * @param {number[][]} curBoard \r\n * @param {Position[]} validPositions \r\n */\r\nfunction backTrack(validPositionIndex, curBoard, validPositions) {\r\n  if (isFinal(curBoard)) \r\n    return;\r\n  \r\n  let position = validPositions[validPositionIndex];\r\n  let nextSteps = getNextSteps(position, curBoard);\r\n\r\n  let r = position.row;\r\n  let c = position.col;\r\n  nextSteps.forEach(step => {\r\n    if (!isFinal(curBoard))\r\n      curBoard[r][c] = step;\r\n    backTrack(validPositionIndex + 1, curBoard, validPositions);\r\n    if (!isFinal(curBoard))\r\n      curBoard[r][c] = null;\r\n  });\r\n}\r\n\r\n/**\r\n * @param {number[][]} board \r\n * @returns {Position[]}\r\n */\r\nfunction getValidPositions(board) {\r\n  let positions = [];\r\n  for (let i = 0; i < BOARD_SIZE; i++) {\r\n    for (let j = 0; j < BOARD_SIZE; j++) {\r\n      if (board[i][j] === null)\r\n        positions.push(new Position(i, j)); \r\n    }  \r\n  }\r\n\r\n  return positions;\r\n}\r\n\r\n/**\r\n * @param {number[][]} curBoard\r\n * @return {boolean} \r\n */\r\nfunction isFinal(curBoard) {\r\n  for (let i = 0; i < BOARD_SIZE; i++) {\r\n    if (curBoard[i].indexOf(null) !== -1) \r\n      return false;    \r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {Position} position \r\n * @param {number[][]} curBoard \r\n * @returns {number[]} \r\n */\r\nfunction getNextSteps(position, curBoard) {\r\n  let curRow = position.row;\r\n  let curCol = position.col;\r\n\r\n  // Remove elems already in row\r\n  let steps = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n  steps = new Set([...steps].filter(function(x) { return curBoard[curRow].indexOf(x) < 0}));\r\n  // Remove elems already in col\r\n  for (let row = 0; row < BOARD_SIZE; row++) {\r\n    var cellValue = curBoard[row][curCol];\r\n    if (cellValue !== null && steps.has(cellValue)) \r\n      steps.delete(cellValue);\r\n  }\r\n\r\n  // Remove elems in group\r\n  const groupSize = BOARD_SIZE / 3;\r\n  let topLeftR = Math.floor(curRow / groupSize) * groupSize;\r\n  let topLeftC = Math.floor(curCol / groupSize) * groupSize;\r\n  for (let i = topLeftR; i < topLeftR + groupSize; i++) {\r\n    for (let j = topLeftC; j < topLeftC + groupSize; j++) {\r\n      cellValue = curBoard[i][j];\r\n      if (cellValue !== null && steps.has(cellValue)) \r\n        steps.delete(cellValue);  \r\n    }  \r\n  }\r\n\r\n  return Array.from(steps);\r\n}\r\n\r\nclass Position {\r\n  constructor(row, col) {\r\n    this.row = row;\r\n    this.col = col;\r\n  }\r\n}","import { BOARD_SIZE } from '../component/Board';\r\n\r\n/**\r\n * @param {number[][]} board \r\n * @returns {boolean}\r\n */\r\nexport function isValidSudoku(board) {\r\n    const cells = [{}, {}, {}, {}, {}, {}, {}, {}, {}];\r\n    const cols = [{}, {}, {}, {}, {}, {}, {}, {}, {}];\r\n    const rows = [{}, {}, {}, {}, {}, {}, {}, {}, {}];\r\n    const groupSize = BOARD_SIZE / 3;\r\n\r\n    for (let i = 0; i < BOARD_SIZE; i++) {\r\n        for (let j = 0; j < BOARD_SIZE; j++) {\r\n            const cellValue = board[i][j];\r\n\r\n            if (cellValue !== null) {\r\n                const group = Math.floor(j / groupSize) + (Math.floor(i / groupSize) * groupSize);\r\n\r\n                if (cells[group][cellValue] || cols[j][cellValue] || rows[i][cellValue]) {\r\n                    return false;\r\n                }\r\n\r\n                cells[group][cellValue] = cols[j][cellValue] = rows[i][cellValue] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}","import React from 'react';\r\nimport { SquareComponent } from './Square';\r\nimport { Row, Container, Button, Modal, div, Card, Toast } from 'react-bootstrap';\r\nimport { solveSudokuSucceed } from '../functions/solve';\r\n \r\nexport const BOARD_SIZE = 9;\r\n\r\nexport class BoardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null)),\r\n      selectedCell: [],\r\n      showNumPad: false,\r\n      showToast: false,\r\n      toastBody: \"\",\r\n      solved: false\r\n    };\r\n    \r\n    this.resetBoard = this.resetBoard.bind(this);\r\n    this.solveAndUpdateBoard = this.solveAndUpdateBoard.bind(this);\r\n    this.numPad = this.numPad.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.showToastSuccess = this.showToastSuccess.bind(this);\r\n    this.showToastFail = this.showToastFail.bind(this);\r\n    this.hideToast = this.hideToast.bind(this);\r\n  }\r\n\r\n  handleClick(r, c) {\r\n    this.setState({showNumPad: true, selectedCell: [r, c] }); \r\n  }\r\n\r\n  buildBoard() {\r\n    const rows = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    const board = rows.map((row) => this.buildRow(row));\r\n    return board;\r\n  }\r\n\r\n  buildRow(rowNumber) {\r\n    const cols = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    const row = cols.map((col) =>\r\n      this.renderSquare(rowNumber, col)\r\n    );\r\n\r\n    return (\r\n      <div\r\n        key={\"row-\" + rowNumber.toString()}\r\n        className=\"board-row\"\r\n      >\r\n        {row}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  resetBoard() {\r\n    const board = Array(BOARD_SIZE).fill(null).map(() => Array(BOARD_SIZE).fill(null));\r\n    this.setState({squares: board, solved: false});\r\n  }\r\n\r\n  renderSquare(r, c) {\r\n    return (\r\n      <SquareComponent\r\n        id={\"square-\" + r.toString() + \"-\" + c.toString()}\r\n        key={\"square-\" + r.toString() + \"-\" + c.toString()}\r\n        disabled={this.state.solved}\r\n        value={this.state.squares[r][c]}\r\n        onClick={() => this.handleClick(r, c)}\r\n      />\r\n    );\r\n  }\r\n\r\n  selectCellValue(value) {\r\n    let squares = this.state.squares.slice();\r\n    const selectedCell = this.state.selectedCell.slice();\r\n    squares[selectedCell[0]][selectedCell[1]] = value;\r\n    this.setState({squares: squares, showNumPad: false});\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({showNumPad: false});\r\n  }\r\n\r\n  numPad() {\r\n    return (\r\n      <Modal show={this.state.showNumPad} onHide={this.hideModal} centered>\r\n        <Modal.Body>\r\n          <div className=\"board-row\">\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(1)}>1</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(2)}>2</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(3)}>3</Button>\r\n            </Card>\r\n          </div>\r\n          <div className=\"board-row\">\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(4)}>4</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(5)}>5</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(6)}>6</Button>\r\n            </Card>\r\n          </div>\r\n          <div className=\"board-row\">\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(7)}>7</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(8)}>8</Button>\r\n            </Card>\r\n            <Card>\r\n              <Button variant=\"outline-success\" onClick={() => this.selectCellValue(9)}>9</Button>\r\n            </Card>\r\n          </div>\r\n          <div className=\"board-row mt-2\">\r\n              <Button variant=\"outline-danger\" onClick={() => this.selectCellValue(null)}>Clear</Button>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  solveAndUpdateBoard() {\r\n    const board = this.state.squares.slice();\r\n    const startTime = performance.now();\r\n    if (solveSudokuSucceed(board)) {\r\n      const endTime = performance.now();\r\n      this.setState({squares: board, solved: true});\r\n      this.showToastSuccess((endTime - startTime).toFixed(3));\r\n    } else {\r\n      this.showToastFail();\r\n    }\r\n  }\r\n\r\n  showToastSuccess(time) {\r\n    const body = (\r\n      <div>\r\n        <strong style={{\"color\": \"green\"}}>SUCCESS! </strong>\r\n        It took {time} milliseconds to solve your puzzle!\r\n      </div>\r\n    );\r\n\r\n    this.setState({showToast: true, toastBody: body});\r\n  }\r\n\r\n  showToastFail() {\r\n    const body = (\r\n      <div>\r\n        <strong style={{\"color\": \"red\"}}>ERROR: </strong> \r\n        Invalid sudoku board! Please try again.\r\n      </div>\r\n    );\r\n\r\n    this.setState({showToast: true, toastBody: body});\r\n  }\r\n\r\n  hideToast() {\r\n    this.setState({\"showToast\": false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.buildBoard()}\r\n          <this.numPad />\r\n        </Container>\r\n        <div style={{\"display\": \"flex\"}}>\r\n          <Toast \r\n            style={{\"position\": \"absolute\", \"bottom\": \"60px\", \"right\": \"0\"}} \r\n            className=\"mr-3\"\r\n            onClose={this.hideToast}\r\n            show={this.state.showToast}\r\n            delay={4000}\r\n            autohide\r\n          >\r\n            <Toast.Body>\r\n              {this.state.toastBody}\r\n            </Toast.Body>\r\n          </Toast>\r\n        </div>\r\n        <Row className=\"button-row mb-4 mt-4\">\r\n          <Button variant='danger' className='mr-5' onClick={this.resetBoard}>\r\n            Reset\r\n          </Button>\r\n          <Button variant='success' disabled={this.state.solved} onClick={this.solveAndUpdateBoard}>\r\n            Solve!\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons'\r\n\r\nexport class FooterComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"light\" fixed=\"bottom\">\r\n        <Navbar.Collapse className=\"justify-content-center\">\r\n          <Navbar.Text>\r\n            Made with &hearts; by Heidi Tran and Sammy Tran\r\n          </Navbar.Text>\r\n          <Nav.Link href=\"https://github.com/HeidiTran/Sudoku-Solver\" target=\"_blank\">\r\n            <FontAwesomeIcon icon={faGithubAlt} size='lg' color=\"grey\"/>\r\n          </Nav.Link>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BoardComponent } from '../component/Board';\r\nimport { FooterComponent } from './Footer';\r\n\r\nexport class HomeComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center mb-5\">Let the power of AI solve your problems!</h1>\r\n        <Container>\r\n          <BoardComponent />   \r\n        </Container>\r\n        <FooterComponent />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { FooterComponent } from './Footer';\r\n\r\nexport class AboutComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>THIS IS ABOUT COMPONENT</p>\r\n        <FooterComponent />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport { NavMenuComponent } from '../component/NavMenu';\r\nimport { HomeComponent } from '../component/Home';\r\nimport { AboutComponent } from '../component/About';\r\n\r\nexport const AppRouter = () => (\r\n  <Router>\r\n    <NavMenuComponent />\r\n    <Container fluid className=\"mt-3\">\r\n      <Switch>\r\n        <Route path='/Sudoku-Solver/home' component={ HomeComponent }/>\r\n        <Route path='/Sudoku-Solver/about' component={ AboutComponent }/>\r\n        <Redirect from='/Sudoku-Solver' to='/Sudoku-Solver/home' />\r\n      </Switch>\r\n    </Container>\r\n  </Router>\r\n);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { AppRouter } from './router/router';\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}